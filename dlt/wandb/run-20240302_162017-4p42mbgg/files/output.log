
  0%|                                                                                                                                                                                                                               | 0/11 [00:00<?, ?it/s]
############################################################################################################
step:  990
batch:  tensor([[[ 3.3728e+01, -4.8085e+01, -1.3372e+01, -8.0727e+01],
         [-3.7160e+00,  6.4793e+01, -1.0192e+02,  1.6131e+02],
         [ 1.9698e+01,  3.6408e+01,  1.0701e+02, -1.1134e+02],
         ...,
         [ 0.0000e+00,  0.0000e+00, -0.0000e+00,  0.0000e+00],
         [-0.0000e+00, -0.0000e+00, -0.0000e+00,  0.0000e+00],
         [-0.0000e+00, -0.0000e+00,  0.0000e+00,  0.0000e+00]],
        [[ 4.9540e+01, -5.9519e+00, -4.1975e+01,  9.9484e+01],
         [ 2.9190e+01,  1.8141e+01, -6.6058e+00,  9.7661e+01],
         [ 4.2060e+01, -5.8845e+01,  1.0400e+02, -4.3135e+01],
         ...,
         [ 0.0000e+00, -0.0000e+00,  0.0000e+00, -0.0000e+00],
         [-0.0000e+00, -0.0000e+00,  0.0000e+00, -0.0000e+00],
         [-0.0000e+00,  0.0000e+00, -0.0000e+00,  0.0000e+00]],
        [[-1.4096e+02,  2.3627e+01, -3.5721e+01, -4.8745e+01],
         [-3.5388e+01,  8.5737e+01, -1.0464e+02,  8.5335e+00],
         [ 2.6304e-01,  4.7123e+01, -1.1593e+02, -5.3928e+01],
         ...,
         [-0.0000e+00,  0.0000e+00, -0.0000e+00, -0.0000e+00],
         [ 0.0000e+00,  0.0000e+00, -0.0000e+00, -0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00]],
        ...,
        [[ 2.6354e+01, -2.5799e+01, -2.1037e+01, -8.8770e+01],
         [ 4.8797e+01,  4.1022e+01, -8.8122e+00,  2.6531e+01],
         [ 5.4721e+01,  9.1965e+01, -7.7553e+01, -3.7835e+01],
         ...,
         [-0.0000e+00, -0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00, -0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00, -0.0000e+00, -0.0000e+00]],
        [[-1.0713e+01,  2.6158e+01, -3.7996e+02,  3.2548e+00],
         [ 1.5418e+01,  6.5202e+01, -1.2870e+02, -1.4729e+02],
         [ 4.8688e+01, -1.6908e+01, -1.9411e+01, -2.1653e+01],
         ...,
         [ 5.2303e+01, -1.2321e+01, -1.8186e+01, -1.1421e+02],
         [ 5.8168e+01,  8.9525e+01, -1.2939e+02,  1.5143e+02],
         [ 1.2725e+01,  1.2245e+02, -2.1055e+02, -2.0811e+02]],
        [[-3.3504e+01,  1.0015e+02, -1.1353e+02, -1.3418e+02],
         [-9.0483e+01,  3.7303e+01, -1.8948e+02,  1.8755e+02],
         [ 2.5783e+01, -6.0329e+01, -1.5926e+02,  4.9216e+01],
         ...,
         [ 0.0000e+00, -0.0000e+00,  0.0000e+00,  0.0000e+00],
         [-0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00]]],
       device='cuda:0')
############################################################################################################
############################################################################################################
step:  980
batch:  tensor([[[  68.6902,  -91.3448,  -26.5009, -158.1736],
         [  -6.4284,  128.9528, -200.9729,  324.0468],
         [  38.8168,   73.2937,  213.2418, -213.9326],
         ...,
         [  -0.0000,    0.0000,   -0.0000,    0.0000],
         [   0.0000,   -0.0000,   -0.0000,    0.0000],
         [  -0.0000,    0.0000,   -0.0000,    0.0000]],
        [[  99.3137,   -9.4755,  -82.2298,  196.4509],
         [  61.3279,   36.8017,  -14.2821,  197.1425],
         [  82.6630, -116.3490,  207.4820,  -83.7104],
         ...,
         [   0.0000,   -0.0000,    0.0000,    0.0000],
         [  -0.0000,   -0.0000,   -0.0000,    0.0000],
         [   0.0000,    0.0000,    0.0000,    0.0000]],
        [[-278.3898,   45.5326,  -73.6844,  -97.1161],
         [ -71.9235,  172.4854, -210.7310,   15.9689],
         [   1.1130,   94.5474, -231.6647, -108.0046],
         ...,
         [  -0.0000,    0.0000,   -0.0000,   -0.0000],
         [   0.0000,   -0.0000,    0.0000,    0.0000],
         [   0.0000,   -0.0000,    0.0000,   -0.0000]],
        ...,
        [[  52.0422,  -53.1070,  -42.6243, -172.8055],
         [  94.7424,   80.6966,  -16.4387,   54.5076],
         [ 113.8883,  184.3009, -151.2131,  -72.7536],
         ...,
         [   0.0000,    0.0000,   -0.0000,   -0.0000],
         [  -0.0000,   -0.0000,   -0.0000,   -0.0000],
         [  -0.0000,    0.0000,   -0.0000,    0.0000]],
        [[ -18.8468,   54.6181, -757.0388,    5.3730],
         [  30.2944,  128.0359, -254.7419, -292.3384],
         [  97.5730,  -31.6680,  -39.4621,  -39.3385],
         ...,
         [ 104.4494,  -23.6612,  -35.4995, -226.0677],
         [ 116.8582,  180.1005, -257.3060,  303.7870],
         [  26.3402,  245.2216, -418.5337, -407.9732]],
        [[ -68.7252,  199.1072, -228.9764, -263.6012],
         [-178.1079,   77.9157, -376.7141,  373.3910],
         [  52.2636, -117.3197, -314.4737,   99.5459],
         ...,
         [   0.0000,    0.0000,    0.0000,    0.0000],
         [   0.0000,   -0.0000,    0.0000,   -0.0000],
         [   0.0000,   -0.0000,   -0.0000,   -0.0000]]], device='cuda:0')
############################################################################################################
############################################################################################################
step:  970
batch:  tensor([[[  102.0069,  -137.3914,   -39.7137,  -236.1274],
         [  -10.9018,   194.2326,  -300.5564,   485.5490],
         [   56.3728,   110.1271,   318.8235,  -315.5349],
         ...,
         [   -0.0000,    -0.0000,    -0.0000,    -0.0000],
         [   -0.0000,     0.0000,    -0.0000,     0.0000],
         [    0.0000,    -0.0000,    -0.0000,     0.0000]],
        [[  148.7621,   -10.8737,  -121.8397,   295.9450],
         [   91.5056,    56.4960,   -19.9015,   296.5674],
         [  122.5116,  -172.1654,   310.1873,  -122.8222],
         ...,
         [    0.0000,    -0.0000,    -0.0000,    -0.0000],
         [    0.0000,     0.0000,    -0.0000,     0.0000],
         [   -0.0000,    -0.0000,     0.0000,    -0.0000]],
        [[ -414.4034,    68.1443,  -109.8447,  -144.2674],
         [ -107.8585,   257.1993,  -316.2711,    22.9311],
         [    3.0314,   143.1514,  -347.1324,  -159.8349],
         ...,
         [   -0.0000,     0.0000,    -0.0000,    -0.0000],
         [    0.0000,     0.0000,    -0.0000,     0.0000],
         [    0.0000,    -0.0000,     0.0000,     0.0000]],
        ...,
        [[   78.1571,   -77.9468,   -64.3019,  -258.5289],
         [  141.0677,   121.2156,   -24.6812,    80.0568],
         [  169.1433,   276.5448,  -226.7613,  -109.3188],
         ...,
         [   -0.0000,    -0.0000,     0.0000,    -0.0000],
         [   -0.0000,     0.0000,    -0.0000,    -0.0000],
         [   -0.0000,     0.0000,    -0.0000,    -0.0000]],
        [[  -28.7046,    81.8095, -1132.6527,     7.5294],
         [   46.5150,   191.5401,  -381.6305,  -437.2895],
         [  146.0449,   -46.2273,   -59.2571,   -57.9966],
         ...,
         [  157.8432,   -34.4617,   -51.6622,  -337.3773],
         [  174.4416,   271.5566,  -385.3467,   456.2486],
         [   40.2917,   366.7827,  -626.0598,  -609.4399]],
        [[ -101.5024,   299.0064,  -343.4481,  -394.3160],
         [ -266.0887,   114.8443,  -566.2593,   560.4717],
         [   78.8904,  -175.0997,  -471.0219,   150.2189],
         ...,
         [    0.0000,    -0.0000,     0.0000,    -0.0000],
         [    0.0000,     0.0000,     0.0000,    -0.0000],
         [    0.0000,    -0.0000,     0.0000,     0.0000]]], device='cuda:0')
############################################################################################################
############################################################################################################
step:  960
batch:  tensor([[[  135.9381,  -182.7065,   -53.7205,  -313.8076],
         [  -14.7642,   259.5125,  -399.9468,   648.2961],
         [   74.3867,   145.6121,   423.9803,  -418.2349],
         ...,
         [    0.0000,    -0.0000,    -0.0000,    -0.0000],
         [   -0.0000,    -0.0000,     0.0000,     0.0000],
         [    0.0000,     0.0000,     0.0000,     0.0000]],
        [[  196.8091,   -12.7929,  -162.4022,   394.7033],
         [  121.1279,    77.3154,   -26.1578,   395.6876],
         [  164.5437,  -229.6550,   412.3379,  -162.3683],
         ...,
         [    0.0000,     0.0000,     0.0000,     0.0000],
         [   -0.0000,     0.0000,    -0.0000,    -0.0000],
         [    0.0000,    -0.0000,    -0.0000,    -0.0000]],
        [[ -549.5924,    90.7894,  -147.9012,  -190.9326],
         [ -145.1681,   342.6425,  -421.4176,    31.1574],
         [    5.2682,   190.5546,  -463.5566,  -211.8796],
         ...,
         [   -0.0000,    -0.0000,     0.0000,    -0.0000],
         [   -0.0000,    -0.0000,     0.0000,    -0.0000],
         [    0.0000,     0.0000,     0.0000,    -0.0000]],
        ...,
        [[  105.5327,  -101.3920,   -85.9829,  -343.2947],
         [  186.1607,   162.1353,   -32.1330,   105.4464],
         [  226.0410,   369.8587,  -302.6076,  -144.4957],
         ...,
         [   -0.0000,    -0.0000,     0.0000,    -0.0000],
         [   -0.0000,     0.0000,    -0.0000,    -0.0000],
         [    0.0000,     0.0000,     0.0000,    -0.0000]],
        [[  -37.7259,   109.4665, -1507.8069,    10.6645],
         [   63.7971,   256.2649,  -508.2109,  -580.7988],
         [  195.1954,   -60.6360,   -79.8287,   -76.7813],
         ...,
         [  210.3522,   -47.2378,   -67.1545,  -447.7364],
         [  231.4302,   361.4398,  -512.4031,   607.9798],
         [   53.6729,   488.1166,  -832.8432,  -811.5751]],
        [[ -133.8035,   399.1535,  -457.9774,  -523.4340],
         [ -353.8979,   154.1717,  -754.2302,   745.6887],
         [  105.7905,  -231.2506,  -627.2100,   200.6956],
         ...,
         [    0.0000,    -0.0000,     0.0000,     0.0000],
         [   -0.0000,     0.0000,    -0.0000,     0.0000],
         [   -0.0000,     0.0000,    -0.0000,     0.0000]]], device='cuda:0')
  0%|                                                                                                                                                                                                                               | 0/11 [00:10<?, ?it/s]
Traceback (most recent call last):
  File "/home/sehwan/MIIL/CAL-Refactoring/dlt/inference.py", line 143, in <module>
    main()
  File "/home/sehwan/MIIL/CAL-Refactoring/dlt/inference.py", line 93, in main
    pred_geometry = sample_from_model(batch, model, config.device, noise_scheduler, geometry_scale, config.diffusion_mode, config.image_pred_ox)*batch["padding_mask"]
  File "/home/sehwan/MIIL/CAL-Refactoring/dlt/trainers/cal_trainer_func.py", line 32, in sample_from_model
    epsilon_pred = model(batch, noisy_batch, timesteps=t)
  File "/home/sehwan/anaconda3/envs/CAL/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/sehwan/anaconda3/envs/CAL/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/sehwan/MIIL/CAL-Refactoring/dlt/models/CAL.py", line 134, in forward
    output = self.seqTransEncoder(xseq, src_key_padding_mask = key_padding_mask)[1:] #time step embedding 제외
  File "/home/sehwan/anaconda3/envs/CAL/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/sehwan/anaconda3/envs/CAL/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/sehwan/anaconda3/envs/CAL/lib/python3.9/site-packages/torch/nn/modules/transformer.py", line 391, in forward
    output = mod(output, src_mask=mask, is_causal=is_causal, src_key_padding_mask=src_key_padding_mask_for_layers)
  File "/home/sehwan/anaconda3/envs/CAL/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/sehwan/anaconda3/envs/CAL/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/sehwan/anaconda3/envs/CAL/lib/python3.9/site-packages/torch/nn/modules/transformer.py", line 714, in forward
    x = self.norm1(x + self._sa_block(x, src_mask, src_key_padding_mask, is_causal=is_causal))
  File "/home/sehwan/anaconda3/envs/CAL/lib/python3.9/site-packages/torch/nn/modules/transformer.py", line 722, in _sa_block
    x = self.self_attn(x, x, x,
  File "/home/sehwan/anaconda3/envs/CAL/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/sehwan/anaconda3/envs/CAL/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/sehwan/anaconda3/envs/CAL/lib/python3.9/site-packages/torch/nn/modules/activation.py", line 1241, in forward
    attn_output, attn_output_weights = F.multi_head_attention_forward(
  File "/home/sehwan/anaconda3/envs/CAL/lib/python3.9/site-packages/torch/nn/functional.py", line 5380, in multi_head_attention_forward
    q = q.view(tgt_len, bsz * num_heads, head_dim).transpose(0, 1)
KeyboardInterrupt